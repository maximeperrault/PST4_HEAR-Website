#!/usr/bin/pythonimport pandas as pdfrom StringIO import StringIOimport sysimport timefrom PIL import Imageimport webbrowserimport jsonimport sysimport timeimport pymongofrom pymongo import MongoClientfrom bson.json_util import dumpsdate = sys.argv[1]#Establish a connection with mongo instance.connection = MongoClient("ds033069.mongolab.com", 33069)db = connection["db_hear"]# MongoLab has user authenticationdb.authenticate("projectsysteam19", "Bigdata19")# recuperation de la collection datacollection = db.data# recuperation de la collection dans une listeliste = list(collection.find())# parse json de la listeliste_parse = dumps(liste)# load de la liste json en ocbjet pythondata = json.loads(liste_parse)df = pd.DataFrame(data)time_list=list()sound_list=list()i=0A = df.datewhile (i!=len(A)):	if(A[i]==date):		time_list.append(df.time[i])		sound_list.append(df.sound[i])	i=i+1mapa = """<script>var parseTime = d3.time.format('%H:%M:%S').parse;var div = d3.select('#visualisation').append('svg:div').attr('class', 'tooltip').style('opacity', 0);"""mapa += """var lineData = ["""if len(time_list) == 0 :	mapa += """{x: ,y: }]"""else : 	for n in range(len(time_list)-1):			mapa += """{x: parseTime('%s'), y: %s}, """ % (time_list[n], sound_list[n])	mapa += """{x: parseTime('%s'), y: %s}];""" % (time_list[len(time_list)-1], sound_list[len(time_list)-1])mapa += """var vis = d3.select('#visualisation'),WIDTH = 800,HEIGHT = 450,MARGINS = {top: 20,right: 20,bottom: 20,left: 50},xRange = d3.time.scale().range([MARGINS.left, WIDTH - MARGINS.right]).domain([d3.min(lineData, function(d) {return d.x;}), d3.max(lineData, function(d) {return d.x;})]),yRange = d3.scale.linear().range([HEIGHT - MARGINS.top, MARGINS.bottom]).domain([d3.min(lineData, function(d) {return d.y;}), d3.max(lineData, function(d) {return d.y;})]),xAxis = d3.svg.axis().scale(xRange).tickSize(5).tickSubdivide(true),yAxis = d3.svg.axis().scale(yRange).tickSize(5).orient('left').tickSubdivide(true);vis.append('svg:g').attr('class', 'x axis').attr('transform', 'translate(0,' + (HEIGHT - MARGINS.bottom) + ')').call(xAxis);vis.append('svg:g').attr('class', 'y axis').attr('transform', 'translate(' + (MARGINS.left) + ',0)').call(yAxis); var lineFunc = d3.svg.line().x(function(d) {return xRange(d.x);}).y(function(d) {return yRange(d.y);}).interpolate('linear');vis.append('svg:path').attr('d', lineFunc(lineData)).attr('stroke', 'steelblue').attr('stroke-width', 1.5).attr('fill', 'none');vis.selectAll('scatter-dots').data(lineData).enter().append('svg:circle').attr('r', 3.5).attr('cx', function(d) { return xRange(d.x); }).attr('cy', function(d) { return yRange(d.y); });</script>"""print mapa